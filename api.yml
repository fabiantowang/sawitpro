# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: 3.0.0
info:
  version: 1.0.0
  title: User Service
  description: Backend service for user management and authentication
  license:
    name: MIT

servers:
  - url: http://localhost

paths:
  /register:
    post:
      summary: This is endpoint for user registration.
      operationId: register
      requestBody:
        description: User registration information
        required: true
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration success
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /login:
    post:
      summary: This is endpoint for user login.
      operationId: login
      requestBody:
        description: User login information
        required: true
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login success
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad request
  /profile:
    get:
      summary: This is endpoint for getting user profile.
      operationId: profileGet
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Registration success
          content:
            application/json:    
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '403':
          description: Forbidden
    put:
      summary: This is endpoint for updating user profile.
      operationId: profileUpdate
      security:
        - bearerAuth: []
      requestBody:
        description: Profile update information
        required: true
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
      responses:
        '200':
          description: Profile update success
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '409':
          description: Conflict

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - phone
        - fullname
        - password
      properties:
        phone:
          type: string
          description: User phone number
        fullname:
          type: string
          description: User full name
        password:
          type: string
          format: password
          description: User password
    RegisterResponse:
      type: object
      required:
        - userid
      properties:
        userid:
          type: string
          format: uuid
          description: User ID
    ErrorResponse:
      type: array
      items:
        type: object
        required:
          - message
        properties:
          message:
            type: string
            description: Error message
    LoginRequest:
      type: object
      required:
        - phone
        - password
      properties:
        phone:
          type: string
          minLength: 10
          maxLength: 13
          description: User phone number
        password:
          type: string
          format: password
          minLength: 6
          maxLength: 64
          description: User password
    LoginResponse:
      type: object
      required:
        - userid
        - jwt
      properties:
        userid:
          type: string
          format: uuid
          description: User ID
        jwt:
          type: string
          description: User JWT
    ProfileResponse:
      type: object
      required:
        - fullname
        - phone
      properties:
        fullname:
          type: string
          description: User full name
        phone:
          type: string
          description: User phone number
    ProfileUpdateRequest:
      type: object
      properties:
        fullname:
          type: string
          description: User full name
        phone:
          type: string
          description: User phone number
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
